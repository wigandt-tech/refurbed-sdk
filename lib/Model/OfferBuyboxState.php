<?php
/**
 * OfferBuyboxState
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  WigandtTech\Refurbed
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Merchant API
 *
 * The refurbed merchant API allows to access and manage markets, currencies, instances, shipping profiles, offers, market offers, orders and order items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: integrations@refurbed.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace WigandtTech\Refurbed\Model;
use \WigandtTech\Refurbed\ObjectSerializer;

/**
 * OfferBuyboxState Class Doc Comment
 *
 * @category Class
 * @description - WON: Offer currently has the BuyBox.  - SHOULD_WIN: Current offer configuration should win the BuyBox on next refresh.  - ELIGIBLE: Offer currently does not have the BuyBox.  - WON_ELSEWHERE: Offer currently does not have the BuyBox but another offer of this merchant does.  - INELIGIBLE: Offer cannot reach the BuyBox at this time, e.g. because refurbed&#39;s BuyBox protection for this product is enabled and the offer&#39;s stock is too low.
 * @package  WigandtTech\Refurbed
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OfferBuyboxState
{
    /**
     * Possible values of this enum
     */
    const UNSPECIFIED = 'UNSPECIFIED';

    const WON = 'WON';

    const SHOULD_WIN = 'SHOULD_WIN';

    const ELIGIBLE = 'ELIGIBLE';

    const WON_ELSEWHERE = 'WON_ELSEWHERE';

    const INELIGIBLE = 'INELIGIBLE';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::UNSPECIFIED,
            self::WON,
            self::SHOULD_WIN,
            self::ELIGIBLE,
            self::WON_ELSEWHERE,
            self::INELIGIBLE
        ];
    }
}


